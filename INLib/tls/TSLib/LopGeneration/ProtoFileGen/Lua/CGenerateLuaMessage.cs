using System.Collections.Generic;
using System.IO;

namespace Proto2Code
{
    /// <summary>
    /// 输出模块系统消息定义文件. eg:MailSystemMessage.lua
    /// </summary>
    public class CGenerateLuaMessage
    {
        private CNameUnit m_nameUnit;
        private string m_writePath;

        private FileStream m_file;
        private StreamWriter m_write;
        public CGenerateLuaMessage(CNameUnit nameUnit, string writeRoot)
        {
            m_nameUnit = nameUnit;
            m_writePath = writeRoot + m_nameUnit.MoudleSysMsg + ".lua";

        }

        public void StartWrite(List<SMsgID> systemList)
        {
            m_file = new FileStream(m_writePath, FileMode.OpenOrCreate);
            m_write = new StreamWriter(m_file);

            WriteHead();
            WriteContentSend(systemList);
            FinishWrite1();
            WriteContentRecv(systemList);
            FinishWrite2();

            m_write.Close();
        }

        private void WriteHead()
        {
            m_write.WriteLine("-- ------------------------------------------------------------------------------");
            m_write.WriteLine("--  <autogenerated>");
            m_write.WriteLine("--      This code was generated by a tool.");
            m_write.WriteLine("--      Changes to this file may cause incorrect behavior and will be lost if ");
            m_write.WriteLine("--      the code is regenerated.");
            m_write.WriteLine("--  </autogenerated>");
            m_write.WriteLine("-- ------------------------------------------------------------------------------");
            m_write.WriteLine("");
            m_write.WriteLine("module(\"{0}\", package.seeall)", m_nameUnit.MoudleSysMsg);
            m_write.WriteLine("");
            m_write.WriteLine("local NetMsgPTBuf = require(\"LULib.Network.NetMsgPTBuf\")");
            m_write.WriteLine("");
            m_write.Write("--- request message start---");
        }

        private void WriteContentSend(List<SMsgID> systemList)
        {
            foreach (SMsgID item in systemList)
            {
                MsgType msgType = CHelper.FindMsgType(item.enumName);
                if (msgType == MsgType.Send)
                {
                    string msgTypeDetail = item.enumName.Replace(CConst.CLIENT_SEND_HEAD, string.Empty);
                    msgTypeDetail = msgTypeDetail.ToLower();
                    string transferClassName = CHelper.ConvertUnderlineStrToCamel(msgTypeDetail);
                    string generateStr = CHelper.GerateSendStrOfMsg(transferClassName, true, m_nameUnit.MoudleSysUpper, m_nameUnit.MoudleSysName, item.enumName);
                    m_write.Write(generateStr);
                }          
            }
        }

        private void WriteContentRecv(List<SMsgID> systemList)
        {
            foreach (SMsgID item in systemList)
            {
                MsgType msgType = CHelper.FindMsgType(item.enumName);
                if (msgType == MsgType.Recv)
                {
                    string msgTypeDetail = item.enumName.Replace(CConst.CLIENT_RECV_HEAD, string.Empty);
                    msgTypeDetail = msgTypeDetail.ToLower();
                    string transferClassName = CHelper.ConvertUnderlineStrToCamel(msgTypeDetail);
                    string generateStr = CHelper.GerateSendStrOfMsg(transferClassName, false, m_nameUnit.MoudleSysUpper, m_nameUnit.MoudleSysName, item.enumName);
                    m_write.Write(generateStr);
                }
               
            }
        }
        private void FinishWrite1()
        {
            m_write.WriteLine();
            m_write.WriteLine("--- request message end---");
            m_write.WriteLine();
            m_write.Write("---response message start---");
        }

        public void FinishWrite2()
        {          
            m_write.WriteLine();
            m_write.WriteLine("--- response message end---");
            m_write.WriteLine();
            m_write.WriteLine();
            m_write.WriteLine("return {0}", m_nameUnit.MoudleSysMsg);
            m_write.WriteLine();        
        }
    }
}